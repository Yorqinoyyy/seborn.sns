# -*- coding: utf-8 -*-
"""seaborn.displot-ma'lumot

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1ZS9wD4H4YHNCx_aX_mSrMu9Z_3eViVvn

#seaborn.displot
`seaborn.displot`(data=None, *, x=None, y=None, hue=None, row=None, col=None, weights=None, kind='hist', rug=False, rug_kws=None, log_scale=None, legend=True, palette=None, hue_order=None, hue_norm=None, color=None, col_wrap=None, row_order=None, col_order=None, height=5, aspect=1, facet_kws=None, **kwargs)

`FacetGrid` orqali taqsimot (distribution) grafigini chizish uchun figure-level interfeys.


Bu funksiya ma’lumotlarning bir o‘zgaruvchili (univariate) yoki ikki o‘zgaruvchili (bivariate) taqsimotini vizuallashtirish uchun bir nechta usullardan foydalanishga imkon beradi.
Shuningdek, semantik xaritalash (semantic mapping) orqali ma’lumotlarni bo‘lish hamda bir nechta subplotlar bo‘yicha fasetlashni qo‘llab-quvvatlaydi.

`kind` parametri qaysi usuldan foydalanishni belgilaydi:

`histplot()` (agar kind="hist" bo‘lsa; bu — standart)

`kdeplot()` (agar kind="kde";)

`ecdfplot()` (agar kind="ecdf"; faqat bir o‘zgaruvchili holatlarda ishlatiladi)


Bundan tashqari, har qanday turdagi grafikda rugplot() qo‘shish mumkin. U alohida kuzatuvlarni (individual observations) ko‘rsatadi.

Qo‘shimcha kalit argumentlar (extra keyword arguments) tegishli funksiyaga uzatiladi. Shuning uchun bu interfeys yordamida grafiklar yaratishda barcha parametrlarni to‘liq tushunish uchun har bir funksiya hujjatlariga murojaat qilish tavsiya etiladi.

Taqsimot grafiklari bo‘yicha darslik (`tutorial`) sizga har bir usulning afzalliklari va kamchiliklari haqida chuqurroq tushuncha beradi. Shuningdek, figure-level va axes-level funksiyalari orasidagi farqlar foydalanuvchi
qo‘llanmasida batafsil tushuntirilgan.

#Parametrlar:

data : `pandas.DataFrame`, `numpy.ndarray`, `mapping` yoki ketma-ketlik (`sequence`)

👉 Kiritiladigan ma’lumotlar tuzilmasi. Bu long-form (uzun shakldagi) vektorlar to‘plami bo‘lishi mumkin — ular nomlangan o‘zgaruvchilarga bog‘lanadi. Yoki wide-form (keng shakldagi) dataset ham bo‘lishi mumkin — u ichki (avtomatik) qayta shakllantiriladi.

`x`, `y` : vektorlar yoki data ichidagi kalitlar

👉 Grafikning x va y o‘qlarida joylashadigan o‘zgaruvchilar.

`hue` : vektor yoki data ichidagi kalit

👉 Rangni aniqlovchi semantik o‘zgaruvchi (grafik elementlari shu asosida bo‘yaladi).

`row`, `col` : vektorlar yoki data ichidagi kalitlar

👉 Har xil facetlarda (kichik subplotlarda) chiziladigan ma’lumotlarni ajratib beruvchi o‘zgaruvchilar.

`weights` : vektor yoki data ichidagi kalit

👉 Taqsimot funksiyasini hisoblashda ishlatiladigan kuzatuv og‘irliklari.

`kind` : {“hist”, “kde”, “ecdf”}

👉 Ma’lumotni vizuallashtirish usuli. Tanlangan qiymat qaysi chizish funksiyasidan foydalanilishini va qo‘shimcha parametrlarni belgilaydi.

`rug` : bool

👉 True bo‘lsa, har bir kuzatuv chekka belgilar (rugplot usulida) bilan ko‘rsatiladi.

`rug_kws` : dict

👉 Rugplot ko‘rinishini boshqaruvchi parametrlar.

l`og_scale` : bool yoki son, yoki juft qiymat (bool/son)

👉 O‘qlarni logarifmik masshtabga o‘tkazadi. Yakka qiymat barcha sonli o‘qlarga tatbiq qilinadi. Juft qiymat har bir o‘q uchun alohida qo‘llanadi. Agar son berilsa, log bazasi sifatida qabul qilinadi (standart — 10). None yoki False
bo‘lsa, seaborn mavjud Axes masshtabini ishlatadi.

`legend` : bool

👉 False bo‘lsa, semantik o‘zgaruvchilar uchun `legen`da ko‘rsatilmaydi.

`palette` : `string`, `list`, `dict` yoki `matplotlib.colors.Colormap`

👉 `Hue` uchun ranglarni tanlash usuli. String bo‘lsa — `color_palette()` ga uzatiladi. `List` yoki `dict` — kategorik mappingni, `colormap` obyekti esa sonli mappingni bildiradi.

`hue_order` : stringlar ketma-ketligi

👉 `Hue` kategoriyalarining chizilish tartibini belgilaydi.

`hue_norm` : juft qiymat yoki `matplotlib.colors.Normalize`

👉 Sonli mappingda normallashtirish diapazonini belgilaydi.

`color` : matplotlib rangi

👉 `Hue` ishlatilmaganida qo‘llaniladigan yagona rang. `Hue` mavjud bo‘lsa, matplotlib `property cycle’`dan foydalanadi.

`col_wrap` : int

👉 Ustun (`col`) o‘zgaruvchisini berilgan kenglikda “o‘rash” (`wrap`) — ya’ni ustun facetlar bir nechta qatorlarga bo‘linadi. `row` bilan birga ishlatilmaydi.

`{row,col}_order` : stringlar ketma-ketligi

👉 `Row` va `col` o‘zgaruvchilarining `subplot` panjarasida qaysi tartibda chiqishini belgilaydi.

`height` : son

👉 Har bir facet balandligi (dyuymda). (Shuningdek: aspect).

`aspect` : son

👉 Har bir facetning kenglik/balandlik nisbatini belgilaydi. (`aspect * height = facet` kengligi).

`facet_kws` : dict


Natija (Returns):

`FacetGrid`

👉 Bir yoki bir nechta `subplot`larni boshqaruvchi obyekt. U shartli ma’lumot
bo‘linmalarini ko‘rsatadi va o‘qlar xususiyatlarini birgalikda (batch-setting)
o‘zgartirish uchun qulay metodlarga ega.
"""