# -*- coding: utf-8 -*-
"""seaborn_relplot

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1X0GF_v_8yBiH9dM9KwpOM8WXRk3iAinl

Kerakli kutubxonalarni chaqirib olamiz:
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

"""Yangi dataset yuklab olamiz:"""

tips = sns.load_dataset("tips")
tips.head()

"""#Endi grafik orqali tasvirlaymiz:
Koordinatalar sistemasidagi x va y ga kerakli ustunlarimizni biriktiramiz
Bundan tashqari `hue` parametri biz bergan ustun qiymatlari bo'yicha turli xil ranglar bilan ajratadi
"""

sns.relplot(data=tips, x="total_bill", y="tip", hue="day")

"""E'tibor bergan bo'lsangiz yuqoridagi jadvaldan oldin jadval qanday ishlagani haqida ma'lumot bor edi,
#To'g'ridan to'g'ri jadval chiqishi uchun `show()` parametridan foydalanamiz
"""

sns.relplot(data=tips, x="total_bill", y="tip", hue="day")
plt.show()

"""#`col` o‘zgaruvchisini belgilash, panjara (grid) ustunlari bo‘ylab joylashtirilgan bir nechta kichik grafiklardan (subplot) iborat fasetlangan (faceted) rasm yaratadi."""

sns.relplot(data=tips, x="total_bill", y="tip", hue="day", col="time")
plt.show()

"""#Har xil o‘zgaruvchilarni bir vaqtning o‘zida ham ustunlar (columns), ham qatorlar (rows) bo‘yicha fasetlashga (facet) tayinlash mumkin."""

sns.relplot(data=tips, x="total_bill", y="tip", hue="day", col="time", row='sex')
plt.show()

"""#Agar `col` ga tayinlangan o‘zgaruvchi juda ko‘p darajalarga ega bo‘lsa, uni bir nechta qator `(row)` bo‘ylab “o‘rash” `(wrap)` mumkin."""

sns.relplot(data=tips, x="total_bill", y="tip", hue="time", col="day", col_wrap=2)
plt.show()

"""#Bir nechta semantik o‘zgaruvchilarni bir vaqtning o‘zida belgilash ko‘p o‘lchamli munosabatlarni ko‘rsatishi mumkin, lekin chizma haddan tashqari murakkab bo‘lib ketmasligiga e’tibor bering."""

sns.relplot(
    data=tips, x="total_bill", y="tip", col="time",
    hue="time", size="size", style="sex",
    palette=["b", "r"], sizes=(10, 100)
)
plt.show()

"""#O‘zgaruvchilardan birida tabiiy uzluksizlik (ya’ni ketma-ketlik) bo‘lsa, nuqtalar o‘rniga chiziqlarni ko‘rsatish mantiqan to‘g‘riroq bo‘ladi.
#Chizmada lineplot() dan foydalanish uchun kind="line" deb belgilang. Bu ta’sirni “fmri” ma’lumotlar to‘plami bilan ko‘rsatamiz.
"""

fmri = sns.load_dataset("fmri")
fmri.head()

"""#`kind`="line" dan foydalanish, semantik xaritalash (ya’ni rang, uslub va hokazo belgilarni o‘rnatish) bo‘yicha kind="scatter" bilan bir xil moslashuvchanlikni ta’minlaydi.
#Ammo `lineplot()` chizma chizishdan oldin ma’lumotlarni ko‘proq qayta ishlaydi:

#Kuzatuvlar x qiymatiga qarab saralanadi,

#Takroriy kuzatuvlar birlashtiriladi.


Odatiy holatda chizmada har bir birlik uchun o‘rtacha qiymat va 95 % ishonch oralig‘i (CI) ko‘rsatiladi.
"""

sns.relplot(
    data=fmri, x="timepoint", y="signal", col="region",
    hue="event", style="event", kind="line",
)
plt.show()

"""#Rasmning o‘lchami va shakli har bir alohida fasetning `height` (balandlik) va `aspect` (nisbat) parametrlariga qarab belgilanadi."""

sns.relplot(
    data=fmri,
    x="timepoint", y="signal",
    hue="event", style="event", col="region",
    height=4, aspect=.7, kind="line"
)
plt.show()