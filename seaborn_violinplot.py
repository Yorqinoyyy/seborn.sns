# -*- coding: utf-8 -*-
"""seaborn.violinplot

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PhP3OUaZycL4SjsjnR8nBOemw8SXKGRW

#seaborn.violinplot
`seaborn.violinplot`(data=None, *, x=None, y=None, hue=None, order=None, hue_order=None, orient=None, color=None, palette=None, saturation=0.75, fill=True, inner='box', split=False, width=0.8, dodge='auto', gap=0, linewidth=None, linecolor='auto', cut=2, gridsize=100, bw_method='scott', bw_adjust=1, density_norm='area', common_norm=False, hue_norm=None, formatter=None, log_scale=None, native_scale=False, legend='auto', scale=<deprecated>, scale_hue=<deprecated>, bw=<deprecated>, inner_kws=None, ax=None, **kwargs)

`KDE` (yadro zichligi bahosi) asosida yasalgan shaklni chizish va kuzatuvlar yoki `box plot` statistikalarini qo‘shish.

`Violin plot` (skripka diagrammasi) `box-and-whisker plot` (quti diagrammasi) bilan o‘xshash vazifani bajaradi. U ma’lumotlarni bitta (yoki bir nechta) o‘zgaruvchi bo‘yicha guruhlab, taqsimotini ko‘rsatadi. Lekin `box plot`dan farqli o‘laroq, har bir skripka diagrammasi taqsimotning kernel `density estimate (KDE)` — ya’ni silliqlangan ehtimollik zichligi funksiyasi orqali chiziladi.
"""

# Commented out IPython magic to ensure Python compatibility.
import seaborn as sns
import matplotlib.pyplot as plt
import pandas as pd
import numpy as np
# %matplotlib inline

df = sns.load_dataset("titanic")
sns.violinplot(x=df["age"])
plt.show()

sns.violinplot(data=df, x="age", y="class")
plt.show()

sns.violinplot(data=df, x="class", y="age", hue="alive")
plt.show()

sns.violinplot(data=df, x="class", y="age", hue="alive", fill=False)
plt.show()

sns.violinplot(data=df, x="class", y="age", hue="alive", split=True, inner="quart")
plt.show()

sns.violinplot(data=df, x="class", y="age", hue="alive", split=True, gap=.1, inner="quart")
plt.show()

sns.violinplot(data=df, x="class", y="age", split=True, inner="quart")
plt.show()

sns.violinplot(data=df, x="age", y="deck", inner="point")
plt.show()

sns.violinplot(data=df, x="age", y="deck", inner="point", density_norm="count")
plt.show()

sns.violinplot(data=df, x="age", y="alive", cut=0, inner="stick")
plt.show()

sns.violinplot(data=df, x="age", y="alive", bw_adjust=.5, inner="stick")
plt.show()

sns.violinplot(x=df["age"].round(-1) + 5, y=df["fare"], native_scale=True)
plt.show()

sns.violinplot(data=df, x="age", linewidth=1, linecolor="k")
plt.show()

sns.violinplot(data=df, x="age", inner_kws=dict(box_width=15, whis_width=2, color=".8"))
plt.show()