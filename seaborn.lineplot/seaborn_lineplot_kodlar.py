# -*- coding: utf-8 -*-
"""seaborn.lineplot-kodlar

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1kXxnZ3q_vdqM1vV0ndj1GkYrA4I27GKU

Kerakli kutibxonalarni chaqirib olamiz:
"""

# Commented out IPython magic to ensure Python compatibility.
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
# %matplotlib inline

"""Bizga kerakl ma'lumotlarni yuklab olamiz:"""

flights = sns.load_dataset("flights")
flights.head()

"""Uzoq shakldagi (long-form) ma’lumotlardan foydalanib chiziqli grafik chizish uchun, `x` va `y` o‘zgaruvchilarini belgilash kerak.
Faqat May oyiga tegishli ma'lumotlarni ajratib olyapmiz
"""

may_flights = flights.query("month == 'May'")
sns.lineplot(data=may_flights, x="year", y="passengers")
plt.show()

"""Ma'lumotlarimizni bizga kerakli holda o'zgartirib olamiz"""

flights_wide = flights.pivot(index="year", columns="month", values="passengers")
flights_wide.head()

"""Bitta vektorni chizish uchun uni data ga uzating. Agar vektor pandas.Series bo‘lsa, u o‘zining indeksi bo‘yicha chiziladi."""

sns.lineplot(data=flights_wide["May"])
plt.show()

"""Yuqorida aynan bitta ustun bo'yicha olgandik
Endi hamma ustun uchun grafik chizmiz:
"""

sns.lineplot(data=flights_wide)
plt.show()

"""Butun ma’lumotlar to‘plamini long-form rejimida uzatish takrorlanuvchi qiymatlar (har bir yil) bo‘yicha yig‘iladi va o‘rtacha qiymat hamda 95% ishonchlilik intervalini ko‘rsatadi."""

sns.lineplot(data=flights, x="year", y="passengers")
plt.show()

"""`hue` orqali ma'lumotlarni rang bilan ajratamiz"""

sns.lineplot(data=flights, x="year", y="passengers", hue="month")
plt.show()

"""`style` bilan shakli bilan ham ajratamiz"""

sns.lineplot(data=flights, x="year", y="passengers", hue="month", style="month")
plt.show()

"""Grafikning vertikal o‘qi bo‘yicha yig‘ish va tartiblash uchun `orient` parametridan foydalanamiz."""

sns.lineplot(data=flights, x="passengers", y="year", orient="y")
plt.show()

"""Har bir semantik o‘zgaruvchi ham boshqa ustunni ifodalashi mumkin. Buning uchun bizga murakkabroq ma’lumotlar to‘plami kerak bo‘ladi."""

fmri = sns.load_dataset("fmri")
fmri.head()

"""Takrorlanuvchi kuzatuvlar, semantik guruhlash qo‘llanganda ham, yig‘iladi."""

sns.lineplot(data=fmri, x="timepoint", y="signal", hue="event")
plt.show()

sns.lineplot(data=fmri, x="timepoint", y="signal", hue="region", style="event")
plt.show()

"""`Style` (uslub) o‘zgaruvchisini belgilaganda, guruhlarni farqlash uchun chiziqlar (dash) o‘rniga yoki ular bilan birgalikda markerlardan foydalanish mumkin."""

sns.lineplot(
    data=fmri,
    x="timepoint", y="signal", hue="event", style="event",
    markers=True, dashes=False
)
plt.show()

"""`Units` (birliklar) o‘zgaruvchisini belgilash bir nechta chiziqlarni semantik xaritalashni qo‘llamasdan chizadi."""

sns.lineplot(
    data=fmri.query("region == 'frontal'"),
    x="timepoint", y="signal", hue="event", units="subject",
    estimator=None, lw=1,
)
plt.show()

"""Raqamli ma'lumotlardan iborat yangi data yuklab olamiz"""

dots = sns.load_dataset("dots").query("align == 'dots'")
dots.head()

sns.lineplot(
    data=dots, x="time", y="firing_rate", hue="coherence", style="choice",
)
plt.show()

palette = sns.color_palette("mako_r", 6)
sns.lineplot(
    data=dots, x="time", y="firing_rate",
    hue="coherence", style="choice",
    palette=palette
)
plt.show()

sns.lineplot(
    data=dots, x="time", y="firing_rate",
    size="coherence", hue="choice",
    legend="full"
)
plt.show()

"""`relplot()` funksiyasidan foydalanib, `lineplot()` va `FacetGrid` ni birlashtirish mumkin. Bu qo‘shimcha kategorik o‘zgaruvchilar bo‘yicha guruhlashga imkon beradi. `relplot()` dan foydalanish `FacetGrid`ni bevosita ishlatishga qaraganda xavfsizroq, chunki u semantik xaritalashlarning barcha fasetlar bo‘yicha mosligini ta’minlaydi."""

sns.relplot(
    data=fmri, x="timepoint", y="signal",
    col="region", hue="event", style="event",
    kind="line"
)
plt.show()